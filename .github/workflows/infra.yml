name: Deploy Infrastructure (Azure VM with Terraform)

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: Deploy VM and SonarQube
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform -chdir=vm-deploy/environments/dev init -input=false

      - name: Terraform Validate
        run: terraform -chdir=vm-deploy/environments/dev validate

      - name: Terraform Plan
        run: terraform -chdir=vm-deploy/environments/dev plan -input=false -var="admin_password=${{ secrets.ADMIN_PASSWORD }}"

      - name: Terraform Apply
        run: terraform -chdir=vm-deploy/environments/dev apply -auto-approve -input=false -var="admin_password=${{ secrets.ADMIN_PASSWORD }}"

      - name: Get Terraform Outputs
        id: tf_outputs
        run: |
          echo "ðŸ“¤ Obteniendo outputs de Terraform..."
          public_ip=$(terraform -chdir=vm-deploy/environments/dev output -raw vm_public_ip 2>/dev/null || echo "")
          echo "public_ip=$public_ip" >> $GITHUB_OUTPUT
          echo "vm_admin_user=azureuser" >> $GITHUB_OUTPUT
          echo "IP pÃºblica detectada: $public_ip"

      - name: Save environment variables
        run: |          
          echo "SONAR_HOST_URL=http://${{ steps.tf_outputs.outputs.public_ip }}:9000" >> $GITHUB_ENV
          echo "VM_USER=${{ steps.tf_outputs.outputs.vm_admin_user }}" >> $GITHUB_ENV

      - name: Verify Docker and SonarQube
        run: |
          ssh -o StrictHostKeyChecking=no $VM_USER@${{ steps.tf_outputs.outputs.public_ip }} "docker ps"
          echo "âœ… Infraestructura desplegada correctamente"
